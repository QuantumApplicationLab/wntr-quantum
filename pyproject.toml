# see documentation, e.g.
# - https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#declaring-project-metadata
# - https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
# - https://www.python.org/dev/peps/pep-0621/

[build-system]
requires = ["setuptools>=64.0.0", "setuptools-scm", "wheel"]
build-backend = "setuptools.build_meta"

[project]
authors = [{ name = "Nicolas Renaud", email = "n.renaud@esciencecenter.nl" }]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.9",
]
dependencies = [
    "numpy",
    "scipy",
    "wntr",
    "quantum_newton_raphson@git+https://github.com/QuantumApplicationLab/QuantumNewtonRaphson",
    "qubols@git+https://github.com/QuantumApplicationLab/qubols",
    "qubops@git+https://github.com/QuantumApplicationLab/qubops",
]

description = "A quantum enabled water nework management tool"
keywords = ["water network", "quantum computing"]
license = { file = "LICENSE" }
name = "wntr_quantum"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.8"
version = "0.1.0"

[project.optional-dependencies]
dev = [
    "build",            # build is not only used in publishing (below), but also in the template's test suite
    "bump-my-version",
    "pytest",
    "ruff",
    "sphinx",
    "sphinx_rtd_theme",
    "sphinx-autoapi",
    "myst_parser",
]
publishing = ["build", "twine", "wheel"]

[project.urls]
Repository = "https://github.com/QuantumApplicationLab/wntr-quantum"
Issues = "https://github.com/QuantumApplicationLab/wntr-quantum/issues"
Changelog = "https://github.com/QuantumApplicationLab/wntr-quantum/CHANGELOG.md"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["wntr_quantum"]
command_line = "-m pytest"

[tool.isort]
lines_after_imports = 2
force_single_line = 1
no_lines_before = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]
known_first_party = "wntr_quantum"
src_paths = ["wntr_quantum", "tests"]
line_length = 120

# For completeness, until we move to an src-based layout
[tool.setuptools.packages.find]
include = ["wntr_quantum*"]
exclude = ["tests*"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38,py39,py310,py311,py312
skip_missing_interpreters = true
[testenv]
commands = pytest
extras = dev
"""

[tool.ruff]
# Enable Pyflakes `E` and `F` codes by default.
select = [
    "F", # Pyflakes
    "E", # pycodestyle (error)
    "W", # pycodestyle (warning)
    # "C90",  # mccabe
    "I", # isort
    "D", # pydocstyle
    # "PL",   # Pylint
    # "PLC",  # Convention
    # "PLE",  # Error
    # "PLR",  # Refactor
    # "PLW",  # Warning

]
ignore = [
    'D100', # Missing module docstring
    'D104', # Missing public package docstring
    # The following list excludes rules irrelevant to the Google style
    'D203',
    'D204',
    'D213',
    'D215',
    'D400',
    'D401',
    'D404',
    'D406',
    'D407',
    'D408',
    'D409',
    'D413',
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".venv",
    "scripts",
]
per-file-ignores = {}


# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

target-version = "py39"
line-length = 120

[tool.ruff.isort]
known-first-party = ["wntr_quantum"]
force-single-line = true
no-lines-before = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.bumpversion]
current_version = "0.1.0"

[[tool.bumpversion.files]]
filename = "wntr_quantum/__init__.py"

[[tool.bumpversion.files]]
filename = "pyproject.toml"

[[tool.bumpversion.files]]
filename = "CITATION.cff"

[[tool.bumpversion.files]]
filename = "docs/conf.py"
